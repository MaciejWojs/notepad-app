name: Create documentation
on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'

env:
  PACKAGES: graphviz ghostscript
  IS_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}
  LATEX_DIR: ./docs/latex/
  HTML_DIR: ./docs/html/
  FILE_NAME: main


jobs:
  Create_documentation:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: check for cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        id: cache-packages
        with:
          packages: ${{ env.PACKAGES }}
          version: 1.0
          execute_install_scripts: true
      - name: install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: sudo apt update && sudo apt install -y ${{ env.PACKAGES }}

      - name: Prettify doxygen
        run: |
          latest_version=$(curl -s https://api.github.com/repos/jothepro/doxygen-awesome-css/releases/latest | jq -r '.tag_name')
          download_url="https://github.com/jothepro/doxygen-awesome-css/archive/refs/tags/${latest_version}.tar.gz"
          wget -q -O doxygen-awesome-css.tar.gz "$download_url"

          tar -xzf doxygen-awesome-css.tar.gz
          mv doxygen-awesome-css*/ doxygen-awesome-css/
          cp doxygen-awesome-css/doxygen-awesome.css doxygen-awesome-css/doxygen-awesome-sidebar-only.css -t . 
          echo -e "\n" >> Doxyfile
          echo "GENERATE_TREEVIEW      = YES" >> Doxyfile
          echo "DISABLE_INDEX          = NO" >> Doxyfile
          echo "FULL_SIDEBAR           = NO" >> Doxyfile
          echo "HTML_EXTRA_STYLESHEET  = doxygen-awesome.css doxygen-awesome-sidebar-only.css" >> Doxyfile
          chmod 777 ./filter.py

      - name: Set Doxygen project version
        run: |
          if [ "${{ env.IS_TAG }}" = "true" ]; then
            echo PROJECT_NUMBER = ${NEWEST_TAG} >> Doxyfile
          else
            latest_tag=$(curl -s https://api.github.com/repos/${{ env.REPO }}/releases/latest | jq -r '.tag_name')
            echo PROJECT_NUMBER = ${latest_tag} >> Doxyfile
          fi

      - name: Generate Doxygen Documentation
        uses: mattnotmitt/doxygen-action@edge
        with:
          additional-packages: python3

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.HTML_DIR }}

      - name: compile doxygen latex documentation
        if: startsWith(github.ref, 'refs/tags/')
        uses: xu-cheng/latex-action@3.2.0
        with:
          extra_system_packages: "inkscape"
          latexmk_shell_escape: true
          working_directory: ${{env.LATEX_DIR}}
          root_file: refman.tex

      - name: Rename PDF file
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cp ${{env.LATEX_DIR}}refman.pdf ./${{env.FILE_NAME}}.pdf
          sudo chmod 777 ${{env.LATEX_DIR}}refman.pdf

      - name: release the pdf
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{env.FILE_NAME}}.pdf"

      - name: Webhook DC notification
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          curl -s -H "Content-Type: application/json" -d '{"content": "Stworzono dokumentacjÄ™ @everyone"}' ${{ secrets.DISCORD_WEBHOOK_URL }} &> /dev/null
