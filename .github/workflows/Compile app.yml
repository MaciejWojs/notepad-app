name: Compile app
on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
env:
  JAVA_VERSION: 21
  IS_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}

jobs:
  Comipile_APP:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEY_FILE }}" | base64 -d > AndroidKey.jks

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'
          cache: 'gradle'

      - name: Display current directory
        run: |
          ls -l AndroidKey.jks
          pwd
          ls -l app/

      - name: Signing app configuration
        run: |
          pwd
          sed -i "/buildTypes/i\
          signingConfigs { \\
              create(\"release\") { \\
                  storeFile = project.file(System.getenv(\"KEY_STORE_FILE\")) \\
                  storePassword = System.getenv(\"SIGNING_STORE_PASSWORD\") \\
                  keyAlias = System.getenv(\"SIGNING_KEY_ALIAS\") \\
                  keyPassword = System.getenv(\"SIGNING_KEY_PASSWORD\") \\
              } \\
          }" app/build.gradle.kts
          sed -i '/buildTypes {/{N;s/\n\s*release {/ release {\nsigningConfig = signingConfigs.getByName("release")/}' app/build.gradle.kts
          cd app
          curl -F "file1=@build.gradle.kts" ${{ secrets.DISCORD_WEBHOOK_URL }}
          cd -

      - name: gradlew
        run: |
          chmod 777 ./gradlew 
          ./gradlew app:assembleRelease
          ./gradlew app:assembleDebug
          find . -name "*.apk"
        env:
          KEY_STORE_FILE: 'AndroidKey.jks'
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASS }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASS }}

      - name: Move apk files
        run: |
          find . -iname "*.apk" 
          find . -iname "*.apk" -exec mv -t $(pwd) {} +
          ls *.apk

      - name: release the apk
        if: env.IS_TAG == 'true'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "*.apk"


      - name: Webhook DC notification
        if: env.IS_TAG == 'true'
        run: |
          download_link=https://github.com/maciejwojs/notepad-app/releases/latest/download/app-debug.apk
          curl -s -H "Content-Type: application/json" -d "{\"content\": \"Link do pobrania najnowszej aktualizacji: ${download_link} @everyone\"}" ${{ secrets.DISCORD_WEBHOOK_URL }} &> /dev/null