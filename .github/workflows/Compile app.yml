name: Compile app
on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
env:
  JAVA_VERSION: 21
  IS_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}

jobs:
  Comipile_APP:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'keystore/AndroidKey.jks'
          encodedString: ${{ secrets.KEY_FILE }}

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'
          cache: 'gradle'

      - name: Display current directory
        run: | 
          pwd
          ls -l

      - name: Signing app configuration
        run: |
          pwd
          sed -i '/buildTypes/i\
          signingConfigs {\
            release {\
              def tmpFilePath = System.getProperty("user.home") + "/work/_temp/keystore/"\
              def allFilesFromDir = new File(tmpFilePath).listFiles()\
              if (allFilesFromDir != null) {\
                def keystoreFile = allFilesFromDir.first()\
                keystoreFile.renameTo("keystore/your_keystore.jks")\
              }\
            storeFile = file("keystore/AndroidKey.jks")\
            storePassword System.getenv("SIGNING_STORE_PASSWORD")\
            keyAlias System.getenv("SIGNING_KEY_ALIAS")\
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")\
            }\
          }' app/build.gradle > app/build.gradle.tmp
          rm app/build.gradle
          mv app/build.gradle.tmp app/build.gradle

      - name: gradlew
        run: |
          chmod 777 ./gradlew 
          ./gradlew build
          find . -name "*.apk"
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASS }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASS }}

      - name: release the apk
        if: env.IS_TAG == 'true'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./app/build/outputs/apk/debug/app-debug.apk,./app/release/app-release.apk"


      - name: Webhook DC notification
        if: env.IS_TAG == 'true'
        run: |
          download_link=https://github.com/maciejwojs/notepad-app/releases/latest/download/app-debug.apk
          curl -s -H "Content-Type: application/json" -d "{\"content\": \"Link do pobrania najnowszej aktualizacji: ${download_link} @everyone\"}" ${{ secrets.DISCORD_WEBHOOK_URL }} &> /dev/null